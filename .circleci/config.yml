version: 2.0

config_gcloud: &config_gcloud
  docker:
    - image: google/cloud-sdk:latest
  working_directory: ~/android-simple-boilerplate
  environment:
    TERM: dumb

config_android: &config_android
  docker:
    - image: circleci/android:api-28-alpha
  working_directory: ~/android-simple-boilerplate
  environment:
    JAVA_TOOL_OPTIONS: "-Xmx1024m"
    GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.parallel=true -Dorg.gradle.workers.max=2 -Dkotlin.incremental=false"
    TERM: dumb

update_sdk: &update_sdk
  run:
    name: Update SDK
    command: |
      mkdir "$ANDROID_HOME/licenses" || true
      echo "d56f5187479451eabf01fb78af6dfcb131a6481e" > "$ANDROID_HOME/licenses/android-sdk-license"
      echo "84831b9409646a918e30573bab4c9c91346d8abd" > "$ANDROID_HOME/licenses/android-sdk-preview-license"
      sdkmanager "platform-tools" "platforms;android-28"

gen_cache_key: &gen_cache_key
  run:
    name: Generate cache key
    command: ./checksum.sh /tmp/checksum.txt

restore_cache: &restore_cache
  restore_cache:
    key: gradle-{{ checksum "/tmp/checksum.txt" }}

save_cache: &save_cache
  save_cache:
    paths:
      - ~/.gradle/caches
      - ~/.gradle/wrapper
    key: gradle-{{ checksum "/tmp/checksum.txt" }}

attach_workspace: &attach_workspace
  attach_workspace:
    at: ~/android-simple-boilerplate

persist_workspace: &persist_workspace
  persist_to_workspace:
    root: .
    paths:
      - ./*/build

decrypt_secrets: &decrypt_secrets
  run:
    name: Decrypt secrets
    command: signing/setup.sh $ENCRYPT_KEY

clean_secrets: &clean_secrets
  run:
    name: Cleanup secrets
    command: signing/cleanup.sh

filter_all_tags: &filter_all_tags
  filters:
    tags:
      only: /.*/

filter_release_branch: &filter_release_branch
  filters:
    branches:
      only: /release-.*/

jobs:
  build_debug:
    <<: *config_android
    steps:
      - <<: *update_sdk
      - checkout
      - <<: *gen_cache_key
      - <<: *restore_cache
      - <<: *decrypt_secrets
      - run:
          name: Download Dependencies
          command: ./gradlew dependencies
      - run:
          name: Assemble debug APKs
          command: ./gradlew assembleDebug -Papp.versioncode=$CIRCLE_BUILD_NUM
      - <<: *clean_secrets
      - <<: *save_cache
      - store_artifacts:
          path: app/build/outputs
          destination: outputs
      - <<: *persist_workspace

  check:
      <<: *config_android
      steps:
        - checkout
        - <<: *attach_workspace
        - <<: *gen_cache_key
        - <<: *restore_cache
        - run:
            name: Check app and dependencies
            command: ./gradlew dependencyUpdates lintRelease spotlessCheck testReleaseUnitTest
        - store_artifacts:
            path: app/build/reports
            destination: reports
        - store_artifacts:
            path: build/dependencyUpdates
            destination: dependencyUpdates
        - run:
            name: Save test results
            command: |
              mkdir -p ~/junit/
              find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} ~/junit/ \;
            when: always
        - store_test_results:
            path: ~/junit
        - store_artifacts:
            path: ~/junit

  build_release:
    <<: *config_android
    steps:
      - checkout
      - <<: *attach_workspace
      - <<: *gen_cache_key
      - <<: *restore_cache
      - <<: *decrypt_secrets
      - run:
          name: Assemble App Bundles
          command: ./gradlew bundleRelease -Papp.versioncode=$CIRCLE_BUILD_NUM
      - <<: *clean_secrets
      - store_artifacts:
          path: app/build/outputs
          destination: outputs
      - store_artifacts:
          path: app/build/reports
          destination: reports
      - <<: *persist_workspace

  build_test:
    <<: *config_android
    steps:
      - checkout
      - <<: *attach_workspace
      - <<: *gen_cache_key
      - <<: *restore_cache
      - run:
          name: Build test APKs
          command: ./gradlew assembleDebugAndroidTest
      - store_artifacts:
          path: app/build/outputs
          destination: outputs
      - <<: *persist_workspace

  test_instrumented:
    <<: *config_gcloud
    steps:
      - checkout
      - <<: *attach_workspace
      - <<: *decrypt_secrets
      - run:
          name: Setup Google Cloud auth
          command: ftl-tests/setup.sh
      - run:
          name: Run tests on Firebase Test Lab
          command: ftl-tests/run-tests.sh $CIRCLE_BUILD_NUM firebase_test_results
      - <<: *clean_secrets
      - store_artifacts:
          path: firebase_test_results
      - store_test_results:
          path: firebase_test_results

  publish_on_play:
    <<: *config_android
    steps:
      - checkout
      - <<: *gen_cache_key
      - <<: *restore_cache
      - <<: *attach_workspace
      - <<: *decrypt_secrets
      - run:
          name: Publish on Play Store
          command: ./gradlew publish -Papp.versioncode=$CIRCLE_BUILD_NUM
      - <<: *clean_secrets

workflows:
  version: 2
  build_test_publish:
    jobs:
      - build_debug:
          <<: *filter_all_tags
      - check:
          requires:
            - build_debug
          <<: *filter_all_tags
      - build_test:
          requires:
            - build_debug
          <<: *filter_release_branch
      - test_instrumented:
          requires:
            - build_test
          <<: *filter_release_branch
      - build_release:
          requires:
            - check
          <<: *filter_all_tags
      - publish_on_play:
          requires:
            - build_release
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/